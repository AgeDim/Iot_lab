version: "3.6"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.2
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    networks:
      - localnet
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.2.2
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    networks:
      - localnet
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: LISTENER_1://broker:29092,LISTENER_2://broker:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_1://broker:29092,LISTENER_2://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_1:PLAINTEXT,LISTENER_2:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
      KAFKA_DELETE_TOPIC_ENABLE: "true"

  connect:
    build:
      context: .
      dockerfile: connect.Dockerfile
    ports:
      - "35000:35000"
    hostname: connect
    container_name: connect
    depends_on:
      - zookeeper
      - broker
    networks:
      - localnet
    environment:
      KAFKA_JMX_PORT: 35000
      KAFKA_JMX_HOSTNAME: localhost
      CONNECT_BOOTSTRAP_SERVERS: "broker:29092"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-cluster-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_ZOOKEEPER_CONNECT: "zookeeper:2181"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_CONNECTIONS_MAX_IDLE_MS: 180000
      CONNECT_METADATA_MAX_AGE_MS: 180000
      CONNECT_AUTO_CREATE_TOPICS_ENABLE: "true"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"

  rest-proxy:
    image: confluentinc/cp-kafka-rest:7.2.2
    depends_on:
      - zookeeper
      - broker
    hostname: rest-proxy
    container_name: rest-proxy
    networks:
      - localnet
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: "broker:29092"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"

  mongo1:
    image: "mongodb-kafka-base-mongod:1.0"
    container_name: mongo1
    ports:
      - "35001:27017"
    build:
      context: .
      dockerfile: mongo1.Dockerfile
    command: --replSet rs0 --oplogSize 128
    depends_on:
      - zookeeper
      - broker
      - connect
    networks:
      - localnet
    restart: always

  mongo2:
    image: "mongodb-kafka-base-mongod:2.0"
    container_name: mongo2
    ports:
      - "35002:27017"
    build:
      context: .
      dockerfile: mongo2.Dockerfile
    command: --replSet rs0 --oplogSize 128
    depends_on:
      - zookeeper
      - broker
      - connect
    networks:
      - localnet
    restart: always

  mongo3:
    image: "mongodb-kafka-base-mongod:3.0"
    container_name: mongo3
    ports:
      - "35003:27017"
    build:
      context: .
      dockerfile: mongo3.Dockerfile
    command: --replSet rs0
    depends_on:
      - zookeeper
      - broker
      - connect
    networks:
      - localnet
    restart: always

  mongo-setup:
    image: "mongodb-kafka-base-setup-mongod:1.0"
    container_name: mongo-setup
    build:
      context: .
      dockerfile: mongo1.Dockerfile
    volumes:
      - ./config-source.js:/config-source.js
      - ./topics-regs:/topics
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - localnet
    entrypoint:
      - create-mongo-config
    restart: "no" 


networks:
  localnet:
    attachable: true
